{"version":3,"sources":["components/timer/timer.module.ts","common/hooks/use-local-storage.ts","common/utils/time.ts","components/state.context.tsx","components/timer/summary.component.tsx","components/code/code.module.ts","components/code/create-and-delete-code.component.tsx","components/code/select-code.component.tsx","components/code/code.component.tsx","components/timer/status-menu.component.tsx","components/timer/timer-controller.component.tsx","common/hooks/use-state.ts","components/timer/timer.component.tsx","index.tsx"],"names":["useStyles","makeStyles","timer","position","left","top","transform","summaryButton","color","bottom","right","center","display","flexDirection","alignItems","status_select","width","margin","timerBtn","marginTop","loadData","key","JSON","parse","localStorage","getItem","saveData","storage","setItem","stringify","formatTime","time","hh","Math","floor","mm","ss","StateContext","createContext","StateProvider","children","useState","status","setStatus","code","setCode","problemCodeList","setProblemCodeList","isOpen","setIsOpen","Provider","value","Alert","props","elevation","variant","SlideTransition","Slide","direction","Summary","context","useContext","classes","useMemo","keys","timers","totalTime","reduce","total","handleClose","className","Fab","aria-label","title","onClick","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","TransitionComponent","SnackbarContent","style","background","message","Grid","container","spacing","map","item","severity","onClose","round","createAndDeleteInput","justifyContent","selectCode","marginBottom","codeRegx","CreateAndDeleteCode","helperText","setHelperText","newCode","setNewCode","validateCode","match","TextField","required","label","placeholder","onChange","target","InputLabelProps","shrink","justify","Button","list","includes","newArray","concat","reading","thinking","coding","debugging","filter","removeItem","SelectCode","Autocomplete","id","options","getOptionLabel","option","renderInput","params","Code","StatusMenu","FormControl","InputLabel","Select","labelId","MenuItem","TimerController","setTimerInterval","isStarted","setIsStarted","curTime","setCurTime","intialState","state","setState","useEffect","useMyState","setTotalTime","setTime","useCallback","startedAt","Date","now","interval","setInterval","Typography","isStartedCopy","clearInterval","Timer","Card","CardContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce218bc3.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  timer: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  summaryButton: {\r\n    color: 'white',\r\n    position: 'fixed',\r\n    bottom: 25,\r\n    right: 25,\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  status_select: {\r\n    width: 110,\r\n    margin: '20px auto',\r\n  },\r\n  timerBtn: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n","import { useEffect } from 'react';\r\n\r\nexport function loadData(key: string) {\r\n  return JSON.parse(localStorage.getItem(key)!);\r\n}\r\n\r\nexport function saveData<T = any>(key: string, storage: T) {\r\n  localStorage.setItem(key, JSON.stringify(storage));\r\n}\r\n\r\nexport function useLocalStorage(\r\n  key: string,\r\n  updateStorage: (storage: any) => any,\r\n) {\r\n  useEffect(() => {\r\n    const newData = updateStorage(loadData(key));\r\n    saveData(key, newData);\r\n  }, [key, updateStorage]);\r\n}\r\n","/**\r\n * retunrs the current time in seconds\r\n */\r\nexport function getTime() {\r\n  return Math.round(Date.now() / 1000);\r\n}\r\n\r\n/**\r\n * returns the time in format of `hh:mm:ss`\r\n * @param { number } time time in seconds\r\n */\r\nexport function formatTime(time: number) {\r\n  let hh: any = Math.floor(time / 60 ** 2);\r\n  if (hh < 10) hh = '0' + hh;\r\n\r\n  let mm: any = Math.floor((time % 60 ** 2) / 60);\r\n  if (mm < 10) mm = '0' + mm;\r\n\r\n  let ss: any = Math.floor((time % 60 ** 2) % 60);\r\n  if (ss < 10) ss = '0' + ss;\r\n\r\n  return `${hh}:${mm}:${ss}`;\r\n}\r\n","import React, { createContext, useState } from 'react';\r\nimport { loadData, saveData } from '../common';\r\n\r\nexport const StateContext = createContext<any>({});\r\n\r\nexport function StateProvider({ children }: any) {\r\n  const [status, setStatus] = useState(\r\n    ((status: string) => {\r\n      if (!status) {\r\n        saveData('status', 'reading');\r\n        return 'reading';\r\n      }\r\n      return status;\r\n    })(loadData('status')),\r\n  );\r\n\r\n  const [code, setCode] = useState<string>(loadData('code'));\r\n  const [problemCodeList, setProblemCodeList] = useState(\r\n    loadData('problemCodeList') || [],\r\n  );\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        status,\r\n        setStatus,\r\n        problemCodeList,\r\n        setProblemCodeList,\r\n        code,\r\n        setCode,\r\n        isOpen,\r\n        setIsOpen,\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useMemo } from 'react';\r\nimport { Fab, Snackbar, SnackbarContent, Slide, Grid } from '@material-ui/core';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\n\r\nimport { useStyles } from './timer.module';\r\nimport { StateContext } from '../state.context';\r\nimport { formatTime, loadData } from '../../common';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={5} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction SlideTransition(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nexport function Summary() {\r\n  const context = useContext(StateContext);\r\n  const classes = useStyles();\r\n  const { keys, timers, totalTime } = useMemo(() => {\r\n    const keys = ['reading', 'thinking', 'coding', 'debugging'];\r\n\r\n    if (!context.code || !context.isOpen)\r\n      return { keys, timers: {}, totalTime: 0 };\r\n\r\n    const { timers } = loadData(context.code);\r\n    const totalTime = keys.reduce((total, status) => total + timers[status], 0);\r\n    return {\r\n      keys,\r\n      timers,\r\n      totalTime,\r\n    };\r\n  }, [context.code, context.isOpen]);\r\n\r\n  function handleSummaryClick() {\r\n    context.setIsOpen(false);\r\n    setTimeout(() => {\r\n      context.setIsOpen(true);\r\n    }, 200);\r\n  }\r\n\r\n  function handleClose() {\r\n    context.setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.summaryButton}>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"report\"\r\n          title=\"get a summary\"\r\n          onClick={handleSummaryClick}\r\n        >\r\n          <ReportOutlinedIcon />\r\n        </Fab>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={context.isOpen && !!context.code}\r\n        TransitionComponent={SlideTransition}\r\n      >\r\n        <SnackbarContent\r\n          elevation={0}\r\n          style={{ background: 'none' }}\r\n          message={\r\n            <Grid container direction=\"column\" spacing={1}>\r\n              {keys.map((status) => (\r\n                <Grid item>\r\n                  <Alert severity=\"info\" onClose={handleClose} key={status}>\r\n                    {status}:\r\n                    {formatTime(Math.round((timers[status] || 0) / 1000))}\r\n                  </Alert>\r\n                </Grid>\r\n              ))}\r\n              <Grid item>\r\n                <Alert severity=\"info\">\r\n                  total time: {formatTime(Math.round(totalTime / 1000))}\r\n                </Alert>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        />\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  createAndDeleteInput: {\r\n    marginTop: 30,\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  selectCode: {\r\n    width: 280,\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, TextField, Grid } from '@material-ui/core';\r\n\r\nimport { useStyles } from './code.module';\r\nimport { StateContext } from '../state.context';\r\nimport { saveData } from '../../common';\r\n\r\nconst codeRegx = /^[1-9]\\d*[A-E]$/;\r\n\r\nexport function CreateAndDeleteCode() {\r\n  const classes = useStyles();\r\n  const context = useContext(StateContext);\r\n  const [helperText, setHelperText] = useState('');\r\n  const [newCode, setNewCode] = useState('');\r\n\r\n  function validateCode(code: string) {\r\n    if (!code.match(codeRegx)) {\r\n      return 'please provide a valid code';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\r\n    const code = target.value as string;\r\n    setNewCode(code);\r\n\r\n    if (!code) {\r\n      setHelperText('');\r\n      return;\r\n    }\r\n\r\n    const message = validateCode(code);\r\n    setHelperText(message);\r\n  }\r\n\r\n  function handleClick() {\r\n    if (!newCode) {\r\n      setHelperText('please fill field');\r\n      return;\r\n    }\r\n\r\n    const message = validateCode(newCode);\r\n    setHelperText(message);\r\n\r\n    if (message) return;\r\n\r\n    context.setProblemCodeList((list: Array<string>) => {\r\n      if (list.includes(newCode)) {\r\n        setHelperText('this code is already created');\r\n        return list;\r\n      }\r\n      const newArray = list.concat(newCode);\r\n      saveData('problemCodeList', newArray);\r\n      saveData(newCode, {\r\n        timers: {\r\n          reading: 0,\r\n          thinking: 0,\r\n          coding: 0,\r\n          debugging: 0,\r\n        },\r\n      });\r\n      setNewCode('');\r\n      return newArray;\r\n    });\r\n  }\r\n\r\n  function handleRemove() {\r\n    const message = validateCode(newCode);\r\n    setHelperText(message);\r\n\r\n    if (message) return;\r\n\r\n    context.setProblemCodeList((list: Array<string>) => {\r\n      if (!list.includes(newCode)) {\r\n        setHelperText('this code is not found');\r\n        return list;\r\n      }\r\n      const newArray = list.filter((value) => value !== newCode);\r\n      saveData('problemCodeList', newArray);\r\n      saveData('code', null);\r\n      localStorage.removeItem(newCode);\r\n      context.setCode('');\r\n      setNewCode('');\r\n      return newArray;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" direction=\"column\" spacing={3}>\r\n      <Grid item className={classes.createAndDeleteInput}>\r\n        <TextField\r\n          required\r\n          label=\"Create And Delete Code\"\r\n          placeholder=\"example 101A\"\r\n          value={newCode}\r\n          onChange={handleChange}\r\n          helperText={helperText}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\r\n            create\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleRemove}>\r\n            delete\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nimport { useStyles } from './code.module';\r\nimport { StateContext } from '../state.context';\r\nimport { saveData } from '../../common';\r\n\r\nexport function SelectCode() {\r\n  const context = useContext(StateContext);\r\n  const classes = useStyles();\r\n\r\n  function handleChange(...data: any) {\r\n    const code = data[1];\r\n    saveData('code', code);\r\n    context.setCode(code);\r\n    context.setIsOpen(false);\r\n  }\r\n  return (\r\n    <Autocomplete\r\n      className={classes.selectCode}\r\n      id=\"code\"\r\n      options={context.problemCodeList as Array<string>}\r\n      getOptionLabel={(option) => option}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Code\" variant=\"outlined\" />\r\n      )}\r\n      onChange={handleChange}\r\n      value={context.code}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { useStyles } from './code.module';\r\nimport { CreateAndDeleteCode } from './create-and-delete-code.component';\r\nimport { SelectCode } from './select-code.component';\r\n\r\nexport function Code() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.center}>\r\n      <CreateAndDeleteCode />\r\n      <SelectCode />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { useStyles } from './timer.module';\r\nimport { StateContext } from '../';\r\nimport { saveData } from '../../common';\r\n\r\nexport function StatusMenu() {\r\n  const classes = useStyles();\r\n\r\n  const context = useContext(StateContext);\r\n\r\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\r\n    const status = target.value as string;\r\n    context.setStatus(status);\r\n    saveData('status', status);\r\n  }\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel id=\"status\">Status</InputLabel>\r\n      <Select\r\n        labelId=\"status\"\r\n        id=\"status-select\"\r\n        value={context.status}\r\n        onChange={handleChange}\r\n        className={classes.status_select}\r\n      >\r\n        <MenuItem value=\"reading\">reading</MenuItem>\r\n        <MenuItem value=\"thinking\">thinking</MenuItem>\r\n        <MenuItem value=\"coding\">coding</MenuItem>\r\n        <MenuItem value=\"debugging\">debugging</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, {\r\n  useContext,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport { useStyles } from './timer.module';\r\nimport { loadData, saveData, formatTime, useMyState } from '../../common';\r\nimport { StateContext } from '../state.context';\r\n\r\nexport function TimerController() {\r\n  const context = useContext(StateContext);\r\n  const storage = useMemo(() => loadData(context.code), [context.code]);\r\n  const [, setTimerInterval] = useState<any>(null);\r\n  const [isStarted, setIsStarted] = useState<boolean>(loadData('isStarted'));\r\n  const [curTime, setCurTime] = useState(0);\r\n  const [totalTime, setTotalTime] = useMyState<number>(\r\n    storage.timers[context.status],\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const setTime = useCallback(function (startedAt: number) {\r\n    return () => {\r\n      const curTime = Date.now() - startedAt;\r\n      setCurTime(curTime);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setTimerInterval((interval: any) => {\r\n        if (interval === null) {\r\n          return setInterval(setTime(loadData('startedAt')), 1000);\r\n        }\r\n        return interval;\r\n      });\r\n    }\r\n  }, [isStarted, setTimerInterval, setTime]);\r\n\r\n  function handleClick() {\r\n    setIsStarted((isStarted) => {\r\n      const isStartedCopy = !isStarted;\r\n      saveData('isStarted', isStartedCopy);\r\n\r\n      if (isStarted) {\r\n        setTimerInterval((interval: any) => {\r\n          clearInterval(interval);\r\n          return interval;\r\n        });\r\n        setCurTime((curTime) => {\r\n          const time = curTime + totalTime;\r\n          storage.timers[context.status] = time;\r\n          saveData(context.code, storage);\r\n          saveData('startedAt', 0);\r\n          setTotalTime(time);\r\n          return 0;\r\n        });\r\n      } else {\r\n        const startedAt = Date.now();\r\n        saveData('startedAt', startedAt);\r\n        setTimerInterval(setInterval(setTime(startedAt), 1000));\r\n      }\r\n\r\n      return isStartedCopy;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.center}>\r\n      <Typography variant=\"h3\">\r\n        {formatTime(Math.round((curTime + totalTime) / 1000))}\r\n      </Typography>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        className={classes.timerBtn}\r\n        onClick={handleClick}\r\n      >\r\n        {isStarted ? <PauseIcon /> : <PlayArrowIcon />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\n\r\nexport function useMyState<T = any>(\r\n  intialState: T,\r\n): [T, Dispatch<SetStateAction<T>>] {\r\n  const [state, setState] = useState<T>(intialState);\r\n  useEffect(() => {\r\n    setState(intialState);\r\n  }, [intialState]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\n\r\nimport { useStyles } from './timer.module';\r\nimport { Summary } from './summary.component';\r\nimport { Code } from '../code/code.component';\r\nimport { StatusMenu } from './status-menu.component';\r\nimport { TimerController } from './timer-controller.component';\r\nimport { StateContext } from '../';\r\n\r\nexport function Timer() {\r\n  const context = useContext(StateContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Summary />\r\n      <Card className={classes.timer} elevation={5}>\r\n        <CardContent>\r\n          <div className={classes.center}>\r\n            <Code />\r\n            <StatusMenu />\r\n            {context.code ? (\r\n              <TimerController />\r\n            ) : (\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                Please Select Code\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport { StateProvider, Timer } from './components';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider>\r\n      <Timer />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}