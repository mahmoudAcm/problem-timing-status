{"version":3,"sources":["components/timer/timer.module.ts","common/hooks/use-local-storage.ts","common/utils/time.ts","components/state.context.tsx","components/timer/summary.component.tsx","components/code/code.module.ts","components/code/create-and-delete-code.component.tsx","components/code/select-code.component.tsx","components/code/code.component.tsx","components/timer/status-menu.component.tsx","components/timer/timer-controller.component.tsx","common/hooks/use-state.ts","components/timer/timer.component.tsx","index.tsx"],"names":["useStyles","makeStyles","timer","position","left","top","transform","center","display","flexDirection","alignItems","status_select","width","margin","selectCodeMessage","maringTop","tabPanel","value","justifyContent","marginTop","discoverMoreText","timerBtn","loadData","key","JSON","parse","localStorage","getItem","saveData","storage","setItem","stringify","formatTime","time","hh","Math","floor","mm","ss","StateContext","createContext","StateProvider","children","useState","status","setStatus","code","setCode","problemCodeList","setProblemCodeList","isOpen","setIsOpen","Provider","Alert","props","elevation","variant","SlideTransition","Slide","direction","Summary","context","useContext","useMemo","keys","timers","totalTime","reduce","total","handleClose","Snackbar","anchorOrigin","vertical","horizontal","open","TransitionComponent","SnackbarContent","style","background","message","Grid","container","spacing","map","item","severity","onClose","round","mapStatusToComponent","selectCode","marginBottom","CreateAndDeleteCode","helperText","setHelperText","newCode","setNewCode","TextField","required","label","placeholder","onChange","target","color","InputLabelProps","shrink","justify","Button","onClick","list","includes","newArray","concat","reading","thinking","coding","debugging","filter","removeItem","SelectCode","classes","Autocomplete","className","id","options","getOptionLabel","option","renderInput","params","Code","StatusMenu","FormControl","InputLabel","Select","labelId","MenuItem","TimerController","setTimerInterval","isStarted","setIsStarted","curTime","setCurTime","intialState","state","setState","useEffect","useMyState","setTotalTime","setTime","useCallback","startedAt","Date","now","interval","setInterval","Typography","isStartedCopy","clearInterval","TabPanel","index","rest","TimerControllerWrapper","Timer","setValue","Card","CardContent","Tabs","_","newValue","setTimeout","textColor","indicatorColor","scrollButtons","Tab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAYC,YAAW,CAClCC,MAAO,CACLC,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,yBAEbC,OAAQ,CACNC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,cAAe,CACbC,MAAO,IACPC,OAAQ,aAEVC,kBAAmB,CACjBC,UAAW,IAEbC,SAAU,SAACC,GAAD,MAAY,CACpBT,QAAS,OACTU,eAAgB,SAChBR,WAAY,SACZD,cAAe,SACfU,UAAqB,IAAVF,EAAc,GAAK,KAEhCG,iBAAkB,CAChBR,MAAO,OACPJ,QAAS,SAEXa,SAAU,CACRF,UAAW,M,6CC/BR,SAASG,EAASC,GACvB,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,IAGlC,SAASK,EAAkBL,EAAaM,GAC7CH,aAAaI,QAAQP,EAAKC,KAAKO,UAAUF,ICIpC,SAASG,EAAWC,GACzB,IAAIC,EAAUC,KAAKC,MAAMH,EAAI,SAAG,GAAM,IAClCC,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIG,EAAUF,KAAKC,MAAOH,EAAI,SAAG,GAAM,GAAK,IACxCI,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIC,EAAUH,KAAKC,MAAOH,EAAI,SAAG,GAAM,GAAK,IAG5C,OAFIK,EAAK,KAAIA,EAAK,IAAMA,GAElB,GAAN,OAAUJ,EAAV,YAAgBG,EAAhB,YAAsBC,G,WClBXC,EAAeC,wBAAmB,IAExC,SAASC,EAAT,GAA2C,IAAlBC,EAAiB,EAAjBA,SAAiB,EACnBC,mBACzB,SAACC,GACA,OAAKA,IACHhB,EAAS,SAAU,WACZ,WAHV,CAMEN,EAAS,YARiC,mBACxCsB,EADwC,KAChCC,EADgC,OAWvBF,mBAAiBrB,EAAS,SAXH,mBAWxCwB,EAXwC,KAWlCC,EAXkC,OAYDJ,mBAC5CrB,EAAS,oBAAsB,IAbc,mBAYxC0B,EAZwC,KAYvBC,EAZuB,OAenBN,oBAAS,GAfU,mBAexCO,EAfwC,KAehCC,EAfgC,KAiB/C,OACE,cAACZ,EAAaa,SAAd,CACEnC,MAAO,CACL2B,SACAC,YACAG,kBACAC,qBACAH,OACAC,UACAG,SACAC,aATJ,SAYGT,IC3BP,SAASW,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGtD,SAASG,EAAgBH,GACvB,OAAO,cAACI,EAAA,EAAD,2BAAWJ,GAAX,IAAkBK,UAAU,WAG9B,SAASC,IACd,IAAMC,EAAUC,qBAAWvB,GADH,EAEYwB,mBAAQ,WAC1C,IAAMC,EAAO,CAAC,UAAW,WAAY,SAAU,aAE/C,IAAKH,EAAQf,OAASe,EAAQX,OAC5B,MAAO,CAAEc,OAAMC,OAAQ,GAAIC,UAAW,GAJQ,IAMxCD,EAAW3C,EAASuC,EAAQf,MAA5BmB,OACFC,EAAYF,EAAKG,QAAO,SAACC,EAAOxB,GAAR,OAAmBwB,EAAQH,EAAOrB,KAAS,GACzE,MAAO,CACLoB,OACAC,SACAC,eAED,CAACL,EAAQf,KAAMe,EAAQX,SAblBc,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,OAAQC,EAFE,EAEFA,UAetB,SAASG,IACPR,EAAQV,WAAU,GAiBpB,OACE,mCACE,cAACmB,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,KAAMb,EAAQX,UAAYW,EAAQf,KAClC6B,oBAAqBlB,EAHvB,SAKE,cAACmB,EAAA,EAAD,CACErB,UAAW,EACXsB,MAAO,CAAEC,WAAY,QACrBC,QACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACtB,UAAU,SAASuB,QAAS,EAA5C,UACGlB,EAAKmB,IA1BlB,SAA8BlB,GAC5B,OAAO,SAAUrB,GACf,OACE,cAACoC,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CAAOC,SAAS,OAAOC,QAASjB,EAAhC,mBACMzB,EADN,aACiBZ,EACbG,KAAKoD,OAAOtB,EAAOrB,IAAW,GAAK,UAHzBA,IAuBA4C,CAAqBvB,IAC/B,cAACe,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAAC,EAAD,CAAOC,SAAS,OAAhB,yBACerD,EAAWG,KAAKoD,MAAMrB,EAAY,oBChE1D,IAAMlE,EAAYC,YAAW,CAClCM,OAAQ,CACNC,QAAS,OACTC,cAAe,SACfS,eAAgB,SAChBR,WAAY,UAEd+E,WAAY,CACV7E,MAAO,IACPO,UAAW,GACXuE,aAAc,M,kBCNX,SAASC,IACd,IAAM9B,EAAUC,qBAAWvB,GADS,EAEAI,mBAAS,IAFT,mBAE7BiD,EAF6B,KAEjBC,EAFiB,OAGNlD,mBAAS,IAHH,mBAG7BmD,EAH6B,KAGpBC,EAHoB,KAyDpC,OACE,eAACf,EAAA,EAAD,CAAMC,WAAS,EAACvE,WAAW,SAASiD,UAAU,SAASuB,QAAS,EAAhE,UACE,cAACF,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACY,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAM,yBACNC,YAAY,gBACZlF,MAAO6E,EACPM,SA5DR,YAA0E,IAClEtD,EADiE,EAAjDuD,OACFpF,MACpB8E,EAAWjD,GAENA,GACH+C,EAAc,KAwDVD,WAAYA,EACZpC,QAAQ,WACR8C,MAAM,UACNC,gBAAiB,CACfC,QAAQ,OAId,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACwB,QAAQ,SAASvB,QAAS,EAA1C,UACE,cAACF,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACsB,EAAA,EAAD,CAAQlD,QAAQ,YAAY8C,MAAM,YAAYK,QA7DtD,WACOb,EAKLjC,EAAQZ,oBAAmB,SAAC2D,GAC1B,GAAIA,EAAKC,SAASf,GAEhB,OADAD,EAAc,gCACPe,EAET,IAAME,EAAWF,EAAKG,OAAOjB,GAW7B,OAVAlE,EAAS,kBAAmBkF,GAC5BlF,EAASkE,EAAS,CAChB7B,OAAQ,CACN+C,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,UAAW,KAGfpB,EAAW,IACJe,KApBPjB,EAAc,sBA2DV,sBAIF,cAACb,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACsB,EAAA,EAAD,CAAQlD,QAAQ,YAAY8C,MAAM,YAAYK,QAxCtD,WACE9C,EAAQZ,oBAAmB,SAAC2D,GAC1B,IAAKA,EAAKC,SAASf,GAEjB,OADAD,EAAc,0BACPe,EAET,IAAME,EAAWF,EAAKQ,QAAO,SAACnG,GAAD,OAAWA,IAAU6E,KAMlD,OALAlE,EAAS,kBAAmBkF,GAC5BlF,EAAS,OAAQ,MACjBF,aAAa2F,WAAWvB,GACxBjC,EAAQd,QAAQ,IAChBgD,EAAW,IACJe,MA4BH,4B,aC/EH,SAASQ,IACd,IAAMzD,EAAUC,qBAAWvB,GACrBgF,EAAUvH,IAQhB,OACE,cAACwH,EAAA,EAAD,CACEC,UAAWF,EAAQ9B,WACnBiC,GAAG,OACHC,QAAS9D,EAAQb,gBACjB4E,eAAgB,SAACC,GAAD,OAAYA,GAC5BC,YAAa,SAACC,GAAD,OACX,cAAC/B,EAAA,EAAD,2BACM+B,GADN,IAEE7B,MAAM,yBACN1C,QAAQ,WACR2C,YAAY,0BAGhBC,SApBJ,WACE,IAAMtD,EAAI,wCACVlB,EAAS,OAAQkB,GACjBe,EAAQd,QAAQD,GAChBe,EAAQV,WAAU,IAiBhBlC,MAAO4C,EAAQf,OC3Bd,SAASkF,IACd,IAAMT,EAAUvH,IAEhB,OACE,sBAAKyH,UAAWF,EAAQhH,OAAxB,UACE,cAACoF,EAAD,IACA,cAAC2B,EAAD,O,wCCLC,SAASW,IACd,IAAMV,EAAUvH,IAEV6D,EAAUC,qBAAWvB,GAQ3B,OACE,eAAC2F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYT,GAAG,SAAf,oBACA,eAACU,EAAA,EAAD,CACEC,QAAQ,SACRX,GAAG,gBACHzG,MAAO4C,EAAQjB,OACfwD,SAbN,YAA0E,IAClExD,EADiE,EAAjDyD,OACApF,MACtB4C,EAAQhB,UAAUD,GAClBhB,EAAS,SAAUgB,IAWf6E,UAAWF,EAAQ5G,cALrB,UAOE,cAAC2H,EAAA,EAAD,CAAUrH,MAAM,UAAhB,qBACA,cAACqH,EAAA,EAAD,CAAUrH,MAAM,WAAhB,sBACA,cAACqH,EAAA,EAAD,CAAUrH,MAAM,SAAhB,oBACA,cAACqH,EAAA,EAAD,CAAUrH,MAAM,YAAhB,6B,sCChBD,SAASsH,IACd,IAAM1E,EAAUC,qBAAWvB,GACrBV,EAAUkC,mBAAQ,kBAAMzC,EAASuC,EAAQf,QAAO,CAACe,EAAQf,OAF/B,EAGHH,mBAAc,MAAlC6F,EAHuB,sBAIE7F,mBAAkBrB,EAAS,cAJ7B,mBAIzBmH,EAJyB,KAIdC,EAJc,OAKF/F,mBAAS,GALP,mBAKzBgG,EALyB,KAKhBC,EALgB,OCb3B,SACLC,GACmC,IAAD,EACRlG,mBAAYkG,GADJ,mBAC3BC,EAD2B,KACpBC,EADoB,KAMlC,OAJAC,qBAAU,WACRD,EAASF,KACR,CAACA,IAEG,CAACC,EAAOC,GDWmBE,CAChCpH,EAAQoC,OAAOJ,EAAQjB,SAPO,mBAMzBsB,EANyB,KAMdgF,EANc,KAU1B3B,EAAUvH,IAEVmJ,EAAUC,uBAAY,SAAUC,GACpC,OAAO,WACL,IAAMV,EAAUW,KAAKC,MAAQF,EAC7BT,EAAWD,MAEZ,IAyCH,OAvCAK,qBAAU,WACJP,GACFD,GAAiB,SAACgB,GAChB,OAAiB,OAAbA,EACKC,YAAYN,EAAQ7H,EAAS,cAAe,KAE9CkI,OAGV,CAACf,EAAWD,EAAkBW,IA+B/B,sBAAK1B,UAAWF,EAAQhH,OAAxB,UACE,cAACmJ,EAAA,EAAD,CAAYlG,QAAQ,KAApB,SACGxB,EAAWG,KAAKoD,OAAOoD,EAAUzE,GAAa,QAEjD,cAACwC,EAAA,EAAD,CACElD,QAAQ,WACR8C,MAAM,YACNmB,UAAWF,EAAQlG,SACnBsF,QArCN,WACE+B,GAAa,SAACD,GACZ,IAAMkB,GAAiBlB,EAGvB,GAFA7G,EAAS,YAAa+H,GAElBlB,EACFD,GAAiB,SAACgB,GAEhB,OADAI,cAAcJ,GACPA,KAETZ,GAAW,SAACD,GACV,IAAM1G,EAAO0G,EAAUzE,EAKvB,OAJArC,EAAQoC,OAAOJ,EAAQjB,QAAUX,EACjCL,EAASiC,EAAQf,KAAMjB,GACvBD,EAAS,YAAa,GACtBsH,EAAajH,GACN,SAEJ,CACL,IAAMoH,EAAYC,KAAKC,MACvB3H,EAAS,YAAayH,GACtBb,EAAiBiB,YAAYN,EAAQE,GAAY,MAGnD,OAAOM,MASP,SAMGlB,EAAY,cAAC,IAAD,IAAgB,cAAC,IAAD,SE1ErC,SAASoB,EAAT,GAA6D,IAAzCC,EAAwC,EAAxCA,MAAO7I,EAAiC,EAAjCA,MAAOyB,EAA0B,EAA1BA,SAAaqH,EAAa,4CAC1D,OACE,6CAAKlF,MAAO,CAAErE,QAASsJ,IAAU7I,EAAQ,QAAU,SAAc8I,GAAjE,aACGrH,KAKP,SAASsH,EAAT,GACE,OAD0D,EAA1BlH,KAG5B,qCACE,cAACmF,EAAD,IACA,cAACM,EAAD,OAGC,6BAGF,SAAS0B,IACd,IAAMpG,EAAUC,qBAAWvB,GADL,EAEII,mBAAS,GAFb,mBAEf1B,EAFe,KAERiJ,EAFQ,KAGhB3C,EAAUvH,EAAUiB,GAY1B,OACE,qCACE,cAAC2C,EAAD,IACA,cAACuG,EAAA,EAAD,CAAM1C,UAAWF,EAAQrH,MAAOqD,UAAW,EAA3C,SACE,eAAC6G,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEpJ,MAAOA,EACPmF,SAjBV,SAAsBkE,EAAYC,GAChCL,EAASK,GACQ,IAAbA,IACF1G,EAAQV,WAAU,GAClBqH,YAAW,WACT3G,EAAQV,WAAU,KACjB,OAYGsH,UAAU,UACVC,eAAe,UACflH,QAAQ,aACRmH,cAAc,OANhB,UAQE,cAACC,EAAA,EAAD,CAAK1E,MAAM,UACX,cAAC0E,EAAA,EAAD,CAAK1E,MAAM,kBACX,cAAC0E,EAAA,EAAD,CAAK1E,MAAM,qBAEb,sBAAKuB,UAAWF,EAAQhH,OAAxB,UACE,cAACsJ,EAAD,CAAU5I,MAAOA,EAAO6I,MAAO,EAAGrC,UAAWF,EAAQvG,SAArD,SACE,sBAAKyG,UAAWF,EAAQhH,OAAxB,UACE,cAACyH,EAAD,IACA,cAACgC,EAAD,CAAwBlH,KAAMe,EAAQf,YAG1C,cAAC+G,EAAD,CAAU5I,MAAOA,EAAO6I,MAAO,EAAGrC,UAAWF,EAAQvG,SAArD,SACE,+BACE,6BACE,cAAC0I,EAAA,EAAD,CACElG,QAAQ,UACRiE,UAAWF,EAAQnG,iBAFrB,0FAQF,6BACE,cAACsI,EAAA,EAAD,CACElG,QAAQ,UACRiE,UAAWF,EAAQnG,iBAFrB,wDAOF,6BACE,cAACsI,EAAA,EAAD,CACElG,QAAQ,UACRiE,UAAWF,EAAQnG,iBAFrB,4EAOF,6BACE,cAACsI,EAAA,EAAD,CACElG,QAAQ,UACRiE,UAAWF,EAAQnG,iBAFrB,iGC1FlByJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtI,EAAD,UACE,cAACwH,EAAD,QAGJe,SAASC,eAAe,W","file":"static/js/main.f2117dc5.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  timer: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  status_select: {\n    width: 110,\n    margin: '20px auto',\n  },\n  selectCodeMessage: {\n    maringTop: 20,\n  },\n  tabPanel: (value) => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: value === 1 ? 20 : 40,\n  }),\n  discoverMoreText: {\n    width: '100%',\n    display: 'block',\n  },\n  timerBtn: {\n    marginTop: 20,\n  },\n});\n","import { useEffect } from 'react';\n\nexport function loadData(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function saveData<T = any>(key: string, storage: T) {\n  localStorage.setItem(key, JSON.stringify(storage));\n}\n\nexport function useLocalStorage(\n  key: string,\n  updateStorage: (storage: any) => any,\n) {\n  useEffect(() => {\n    const newData = updateStorage(loadData(key));\n    saveData(key, newData);\n  }, [key, updateStorage]);\n}\n","/**\n * retunrs the current time in seconds\n */\nexport function getTime() {\n  return Math.round(Date.now() / 1000);\n}\n\n/**\n * returns the time in format of `hh:mm:ss`\n * @param { number } time time in seconds\n */\nexport function formatTime(time: number) {\n  let hh: any = Math.floor(time / 60 ** 2);\n  if (hh < 10) hh = '0' + hh;\n\n  let mm: any = Math.floor((time % 60 ** 2) / 60);\n  if (mm < 10) mm = '0' + mm;\n\n  let ss: any = Math.floor((time % 60 ** 2) % 60);\n  if (ss < 10) ss = '0' + ss;\n\n  return `${hh}:${mm}:${ss}`;\n}\n","import React, { createContext, useState } from 'react';\nimport { loadData, saveData } from '../common';\n\nexport const StateContext = createContext<any>({});\n\nexport function StateProvider({ children }: any) {\n  const [status, setStatus] = useState(\n    ((status: string) => {\n      if (!status) {\n        saveData('status', 'reading');\n        return 'reading';\n      }\n      return status;\n    })(loadData('status')),\n  );\n\n  const [code, setCode] = useState<string>(loadData('code'));\n  const [problemCodeList, setProblemCodeList] = useState(\n    loadData('problemCodeList') || [],\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <StateContext.Provider\n      value={{\n        status,\n        setStatus,\n        problemCodeList,\n        setProblemCodeList,\n        code,\n        setCode,\n        isOpen,\n        setIsOpen,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  );\n}\n","import React, { useContext, useMemo } from 'react';\nimport { Snackbar, SnackbarContent, Slide, Grid } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nimport { StateContext } from '../state.context';\nimport { formatTime, loadData } from '../../common';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={5} variant=\"filled\" {...props} />;\n}\n\nfunction SlideTransition(props: TransitionProps) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nexport function Summary() {\n  const context = useContext(StateContext);\n  const { keys, timers, totalTime } = useMemo(() => {\n    const keys = ['reading', 'thinking', 'coding', 'debugging'];\n\n    if (!context.code || !context.isOpen)\n      return { keys, timers: {}, totalTime: 0 };\n\n    const { timers } = loadData(context.code);\n    const totalTime = keys.reduce((total, status) => total + timers[status], 0);\n    return {\n      keys,\n      timers,\n      totalTime,\n    };\n  }, [context.code, context.isOpen]);\n\n  function handleClose() {\n    context.setIsOpen(false);\n  }\n\n  function mapStatusToComponent(timers: any) {\n    return function (status: string) {\n      return (\n        <Grid item key={status}>\n          <Alert severity=\"info\" onClose={handleClose}>\n            {`${status}: ${formatTime(\n              Math.round((timers[status] || 0) / 1000),\n            )}`}\n          </Alert>\n        </Grid>\n      );\n    };\n  }\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={context.isOpen && !!context.code}\n        TransitionComponent={SlideTransition}\n      >\n        <SnackbarContent\n          elevation={0}\n          style={{ background: 'none' }}\n          message={\n            <Grid container direction=\"column\" spacing={1}>\n              {keys.map(mapStatusToComponent(timers))}\n              <Grid item>\n                <Alert severity=\"info\">\n                  total time: {formatTime(Math.round(totalTime / 1000))}\n                </Alert>\n              </Grid>\n            </Grid>\n          }\n        />\n      </Snackbar>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectCode: {\n    width: 280,\n    marginTop: 30,\n    marginBottom: 10,\n  },\n});\n","import React, { useContext, useState } from 'react';\nimport { Button, TextField, Grid } from '@material-ui/core';\n\nimport { StateContext } from '../state.context';\nimport { saveData } from '../../common';\n\nexport function CreateAndDeleteCode() {\n  const context = useContext(StateContext);\n  const [helperText, setHelperText] = useState('');\n  const [newCode, setNewCode] = useState('');\n\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\n    const code = target.value as string;\n    setNewCode(code);\n\n    if (!code) {\n      setHelperText('');\n      return;\n    }\n  }\n\n  function handleClick() {\n    if (!newCode) {\n      setHelperText('please fill field');\n      return;\n    }\n\n    context.setProblemCodeList((list: Array<string>) => {\n      if (list.includes(newCode)) {\n        setHelperText('this code is already created');\n        return list;\n      }\n      const newArray = list.concat(newCode);\n      saveData('problemCodeList', newArray);\n      saveData(newCode, {\n        timers: {\n          reading: 0,\n          thinking: 0,\n          coding: 0,\n          debugging: 0,\n        },\n      });\n      setNewCode('');\n      return newArray;\n    });\n  }\n\n  function handleRemove() {\n    context.setProblemCodeList((list: Array<string>) => {\n      if (!list.includes(newCode)) {\n        setHelperText('this code is not found');\n        return list;\n      }\n      const newArray = list.filter((value) => value !== newCode);\n      saveData('problemCodeList', newArray);\n      saveData('code', null);\n      localStorage.removeItem(newCode);\n      context.setCode('');\n      setNewCode('');\n      return newArray;\n    });\n  }\n\n  return (\n    <Grid container alignItems=\"center\" direction=\"column\" spacing={3}>\n      <Grid item>\n        <TextField\n          required\n          label=\"Create And Delete Code\"\n          placeholder=\"type the code\"\n          value={newCode}\n          onChange={handleChange}\n          helperText={helperText}\n          variant=\"outlined\"\n          color=\"primary\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n            create\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleRemove}>\n            delete\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nimport { useStyles } from './code.module';\nimport { StateContext } from '../state.context';\nimport { saveData } from '../../common';\n\nexport function SelectCode() {\n  const context = useContext(StateContext);\n  const classes = useStyles();\n\n  function handleChange(...data: any) {\n    const code = data[1];\n    saveData('code', code);\n    context.setCode(code);\n    context.setIsOpen(false);\n  }\n  return (\n    <Autocomplete\n      className={classes.selectCode}\n      id=\"code\"\n      options={context.problemCodeList as Array<string>}\n      getOptionLabel={(option) => option}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Select A Code To Start\"\n          variant=\"outlined\"\n          placeholder=\"search for the code\"\n        />\n      )}\n      onChange={handleChange}\n      value={context.code}\n    />\n  );\n}\n","import React from 'react';\n\nimport { useStyles } from './code.module';\nimport { CreateAndDeleteCode } from './create-and-delete-code.component';\nimport { SelectCode } from './select-code.component';\n\nexport function Code() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.center}>\n      <CreateAndDeleteCode />\n      <SelectCode />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\n\nimport { useStyles } from './timer.module';\nimport { StateContext } from '../';\nimport { saveData } from '../../common';\n\nexport function StatusMenu() {\n  const classes = useStyles();\n\n  const context = useContext(StateContext);\n\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\n    const status = target.value as string;\n    context.setStatus(status);\n    saveData('status', status);\n  }\n\n  return (\n    <FormControl>\n      <InputLabel id=\"status\">Status</InputLabel>\n      <Select\n        labelId=\"status\"\n        id=\"status-select\"\n        value={context.status}\n        onChange={handleChange}\n        className={classes.status_select}\n      >\n        <MenuItem value=\"reading\">reading</MenuItem>\n        <MenuItem value=\"thinking\">thinking</MenuItem>\n        <MenuItem value=\"coding\">coding</MenuItem>\n        <MenuItem value=\"debugging\">debugging</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n","import React, {\n  useContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\n\nimport { useStyles } from './timer.module';\nimport { loadData, saveData, formatTime, useMyState } from '../../common';\nimport { StateContext } from '../state.context';\n\nexport function TimerController() {\n  const context = useContext(StateContext);\n  const storage = useMemo(() => loadData(context.code), [context.code]);\n  const [, setTimerInterval] = useState<any>(null);\n  const [isStarted, setIsStarted] = useState<boolean>(loadData('isStarted'));\n  const [curTime, setCurTime] = useState(0);\n  const [totalTime, setTotalTime] = useMyState<number>(\n    storage.timers[context.status],\n  );\n\n  const classes = useStyles();\n\n  const setTime = useCallback(function (startedAt: number) {\n    return () => {\n      const curTime = Date.now() - startedAt;\n      setCurTime(curTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isStarted) {\n      setTimerInterval((interval: any) => {\n        if (interval === null) {\n          return setInterval(setTime(loadData('startedAt')), 1000);\n        }\n        return interval;\n      });\n    }\n  }, [isStarted, setTimerInterval, setTime]);\n\n  function handleClick() {\n    setIsStarted((isStarted) => {\n      const isStartedCopy = !isStarted;\n      saveData('isStarted', isStartedCopy);\n\n      if (isStarted) {\n        setTimerInterval((interval: any) => {\n          clearInterval(interval);\n          return interval;\n        });\n        setCurTime((curTime) => {\n          const time = curTime + totalTime;\n          storage.timers[context.status] = time;\n          saveData(context.code, storage);\n          saveData('startedAt', 0);\n          setTotalTime(time);\n          return 0;\n        });\n      } else {\n        const startedAt = Date.now();\n        saveData('startedAt', startedAt);\n        setTimerInterval(setInterval(setTime(startedAt), 1000));\n      }\n\n      return isStartedCopy;\n    });\n  }\n\n  return (\n    <div className={classes.center}>\n      <Typography variant=\"h3\">\n        {formatTime(Math.round((curTime + totalTime) / 1000))}\n      </Typography>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        className={classes.timerBtn}\n        onClick={handleClick}\n      >\n        {isStarted ? <PauseIcon /> : <PlayArrowIcon />}\n      </Button>\n    </div>\n  );\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nexport function useMyState<T = any>(\n  intialState: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState<T>(intialState);\n  useEffect(() => {\n    setState(intialState);\n  }, [intialState]);\n\n  return [state, setState];\n}\n","import React, { useContext, useState } from 'react';\nimport { Card, CardContent, Typography, Tabs, Tab } from '@material-ui/core';\n\nimport { useStyles } from './timer.module';\nimport { Summary } from './summary.component';\nimport { Code } from '../code/code.component';\nimport { StatusMenu } from './status-menu.component';\nimport { TimerController } from './timer-controller.component';\nimport { StateContext } from '../';\n\nfunction TabPanel({ index, value, children, ...rest }: any) {\n  return (\n    <div style={{ display: index === value ? 'block' : 'none' }} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nfunction TimerControllerWrapper({ code }: { code: string }) {\n  if (code)\n    return (\n      <>\n        <StatusMenu />\n        <TimerController />\n      </>\n    );\n  return <></>;\n}\n\nexport function Timer() {\n  const context = useContext(StateContext);\n  const [value, setValue] = useState(0);\n  const classes = useStyles(value);\n\n  function handleChange(_: unknown, newValue: number) {\n    setValue(newValue);\n    if (newValue === 2) {\n      context.setIsOpen(false);\n      setTimeout(() => {\n        context.setIsOpen(true);\n      }, 200);\n    }\n  }\n\n  return (\n    <>\n      <Summary />\n      <Card className={classes.timer} elevation={5}>\n        <CardContent>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"Timer\" />\n            <Tab label=\"Discover More\" />\n            <Tab label=\"Get A Summary\" />\n          </Tabs>\n          <div className={classes.center}>\n            <TabPanel value={value} index={0} className={classes.tabPanel}>\n              <div className={classes.center}>\n                <Code />\n                <TimerControllerWrapper code={context.code} />\n              </div>\n            </TabPanel>\n            <TabPanel value={value} index={1} className={classes.tabPanel}>\n              <ul>\n                <li>\n                  <Typography\n                    variant=\"caption\"\n                    className={classes.discoverMoreText}\n                  >\n                    Codeforces code consists of contest id followed by problem\n                    number i.e 101A\n                  </Typography>\n                </li>\n                <li>\n                  <Typography\n                    variant=\"caption\"\n                    className={classes.discoverMoreText}\n                  >\n                    Uva code consists of problem id i.e 1024\n                  </Typography>\n                </li>\n                <li>\n                  <Typography\n                    variant=\"caption\"\n                    className={classes.discoverMoreText}\n                  >\n                    Spoj code consist of uppercase letters with numbers i.e EOI2\n                  </Typography>\n                </li>\n                <li>\n                  <Typography\n                    variant=\"caption\"\n                    className={classes.discoverMoreText}\n                  >\n                    Other judges you can pick what ever you like and easy to\n                    memorize\n                  </Typography>\n                </li>\n              </ul>\n            </TabPanel>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { StateProvider, Timer } from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <Timer />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}