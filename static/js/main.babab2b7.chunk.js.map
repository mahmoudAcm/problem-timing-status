{"version":3,"sources":["common/hooks/use-local-storage.ts","common/utils/time.ts","components/select-code/select-problem-code.component.tsx","components/select-code/reducer.ts","components/timer/styles.ts","components/timer/timer.component.tsx","components/timer/reducer.ts","components/status/select-status.component.tsx","components/status/reducer.ts","components/summary/summary.component.tsx","components/code-dialog/code-dialog.component.tsx","components/code-dialog/reducer.ts","components/speed-dial/speed-dial.component.tsx","components/stepper/stepper.component.tsx","components/stepper/reducer.ts","components/app.component.tsx","context.tsx","index.tsx"],"names":["loadData","key","JSON","parse","localStorage","getItem","saveData","storage","setItem","stringify","formatTime","time","hh","Math","floor","mm","ss","SelectProblemCode","useContext","Context","state","SelectCodeReducer","problemCodeList","code","dispatch","Autocomplete","popupIcon","value","id","options","getOptionLabel","option","style","width","height","marginLeft","marginTop","renderInput","params","TextField","label","placeholder","variant","onChange","_","type","initialSelectCode","useStyles","makeStyles","theme","text","fontFamily","fontStyle","fontSize","textAlign","textTransform","color","marginBottom","spacing","unit","fontWeight","btn","Timer","classes","status","StatusReducer","TimerReducer","timers","curTime","timer","isStarted","useState","interval","init","useMemo","round","split","houres","minutes","seconds","useEffect","setInterval","Grid","container","justify","item","className","Button","onClick","startedAt","Date","now","clearInterval","initialTimer","SelectStatus","useTheme","FormControl","component","FormLabel","RadioGroup","aria-label","name","target","FormControlLabel","control","Radio","initialStatus","statusKeys","Summary","sum","reduce","toLowerCase","Timeline","align","concat","map","TimelineItem","TimelineOppositeContent","Typography","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Transition","React","forwardRef","props","ref","Slide","direction","CodeDialog","CodeDialogReducer","isOpen","reason","setCode","helperText","setHelperText","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","error","DialogActions","message","newProblemCodeList","includes","filter","reading","thinking","coding","debugging","initialCodeDialog","createStyles","speedDial","position","bottom","right","actions","icon","OpenIconSpeedDial","setOpen","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","onOpen","action","SpeedDialAction","tooltipTitle","StepAction","activeStep","StepperReducer","completedList","marginRight","errorMessage","step","max","disabled","min","Alert","elevation","StepperComponent","Snackbar","anchorOrigin","vertical","horizontal","severity","Stepper","orientation","top","left","transform","Step","StepLabel","StepContent","display","justifyContent","initialStepper","App","Container","initialState","createContext","reducer","combineReducers","ContextProvider","children","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.babab2b7.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nexport function loadData(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function saveData<T = any>(key: string, storage: T) {\n  localStorage.setItem(key, JSON.stringify(storage));\n}\n\nexport function useLocalStorage(\n  key: string,\n  updateStorage: (storage: any) => any,\n) {\n  useEffect(() => {\n    const newData = updateStorage(loadData(key));\n    saveData(key, newData);\n  }, [key, updateStorage]);\n}\n","/**\n * retunrs the current time in seconds\n */\nexport function getTime() {\n  return Math.round(Date.now() / 1000);\n}\n\n/**\n * returns the time in format of `hh:mm:ss`\n * @param { number } time time in seconds\n */\nexport function formatTime(time: number) {\n  let hh: any = Math.floor(time / 60 ** 2);\n  if (hh < 10) hh = '0' + hh;\n\n  let mm: any = Math.floor((time % 60 ** 2) / 60);\n  if (mm < 10) mm = '0' + mm;\n\n  let ss: any = Math.floor((time % 60 ** 2) % 60);\n  if (ss < 10) ss = '0' + ss;\n\n  return `${hh}:${mm}:${ss}`;\n}\n","import React, { useContext } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { loadData, saveData } from '../../common';\nimport { Context } from '../../context';\n\nexport function SelectProblemCode() {\n  const {\n    state: {\n      SelectCodeReducer: { problemCodeList, code },\n    },\n    dispatch,\n  } = useContext(Context);\n\n  function handleChange(_: any, code: any) {\n    dispatch({\n      type: 'SELECT_CODE',\n      code,\n    });\n\n    dispatch({\n      type: 'INIT_TIMER',\n      ...loadData(code),\n    });\n    saveData('code', code);\n  }\n\n  return (\n    <div>\n      <Autocomplete\n        popupIcon={<ExpandMoreIcon />}\n        value={code}\n        id=\"combo-box-demo\"\n        options={problemCodeList as Array<string>}\n        getOptionLabel={(option) => option}\n        style={{ width: 250, height: 64.34, marginLeft: 8, marginTop: 8 }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Problem code\"\n            placeholder=\"type to search\"\n            variant=\"outlined\"\n          />\n        )}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","import { loadData } from '../../common';\n\nexport const initialSelectCode = {\n  problemCodeList: loadData('problemCodeList') || [],\n  code: loadData('code') || '',\n};\n\nexport function SelectCodeReducer(\n  state = initialSelectCode,\n  { type, code, problemCodeList }: any,\n) {\n  switch (type) {\n    case 'SELECT_CODE': {\n      return {\n        ...state,\n        code,\n      };\n    }\n    case 'SET_PROBLEM_CODE': {\n      return {\n        ...state,\n        problemCodeList,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst styles: any = (theme: Theme) => ({\n  text: {\n    fontFamily: 'Qwigley',\n    fontStyle: 'normal',\n    fontSize: 16.043,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    color: '#000000',\n    marginBottom: -1 * theme.spacing(6),\n  },\n  unit: {\n    fontFamily: 'Reenie Beanie',\n    fontStyle: 'normal',\n    fontWeight: 500,\n    fontSize: 135.898,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    color: '#000000',\n  },\n  btn: {\n    width: 80.66,\n    marginTop: -1 * theme.spacing(2),\n  },\n});\n\nexport const useStyles = makeStyles(styles);\n","import React, { useContext, useState, useMemo, useEffect } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\n\nimport { useStyles } from './styles';\nimport { Context } from '../../context';\nimport { formatTime, saveData } from '../../common';\n\nexport function Timer() {\n  const classes = useStyles();\n  const {\n    state: {\n      StatusReducer: { status },\n      SelectCodeReducer: { code },\n      TimerReducer: { timers, curTime, timer, isStarted },\n    },\n    dispatch,\n  } = useContext(Context);\n  const [interval, init] = useState<any>(null);\n\n  const [houres, minutes, seconds] = useMemo(\n    () => formatTime(Math.round((curTime + timer) / 1000)).split(':'),\n    [curTime, timer],\n  );\n\n  useEffect(() => {\n    if (isStarted && !interval) {\n      init(\n        setInterval(() => {\n          dispatch({\n            type: 'INC_TIMER',\n          });\n        }, 1000),\n      );\n    }\n  }, [isStarted, dispatch, interval]);\n\n  function handleClick() {\n    const startedAt = Date.now();\n    if (!isStarted) {\n      saveData('startedAt', startedAt);\n      init(\n        setInterval(() => {\n          dispatch({\n            type: 'INC_TIMER',\n          });\n        }, 1000),\n      );\n    } else {\n      clearInterval(interval);\n\n      dispatch({\n        type: 'SET_TIMER',\n        curTime: curTime + timer,\n      });\n\n      timers[status] = curTime + timer;\n      saveData(code, { timers });\n    }\n\n    saveData('isStarted', !isStarted);\n    dispatch({\n      type: 'TIMER_CLICKED',\n      startedAt,\n    });\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item container justify=\"center\">\n        <Grid item>\n          <div className={classes.text}>Houres</div>\n          <div className={classes.unit}>{houres}</div>\n        </Grid>\n        <Grid item>\n          <div className={classes.text}>Minutes</div>\n          <div className={classes.unit}>:{minutes}:</div>\n        </Grid>\n        <Grid item>\n          <div className={classes.text}>Seconds</div>\n          <div className={classes.unit}>{seconds}</div>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.btn}\n          onClick={handleClick}\n        >\n          {isStarted ? <PauseIcon /> : <PlayArrowIcon />}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","import { loadData } from '../../common';\n\nconst code = loadData('code');\nconst status = loadData('status');\nconst timers = loadData(code) ? loadData(code).timers : {};\n\nexport const initialTimer: any = {\n  timers,\n  curTime: timers[status],\n  isStarted: loadData('isStarted'),\n  startedAt: loadData('startedAt'),\n  timer: 0,\n};\n\nexport function TimerReducer(\n  state = initialTimer,\n  { type, timers, status, startedAt, curTime }: any,\n) {\n  switch (type) {\n    case 'INIT_TIMER':\n      return {\n        ...state,\n        timers,\n      };\n    case 'SET_TIMER':\n      return {\n        ...state,\n        curTime: curTime || state.timers[status],\n      };\n    case 'TIMER_CLICKED':\n      return {\n        ...state,\n        timer: 0,\n        isStarted: !state.isStarted,\n        startedAt,\n      };\n    case 'INC_TIMER':\n      return {\n        ...state,\n        timer: Date.now() - state.startedAt,\n      };\n    default:\n      return state;\n  }\n}\n","import React, { useContext, useEffect } from 'react';\nimport {\n  useTheme,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@material-ui/core';\n\nimport { Context } from '../../context';\nimport { saveData } from '../../common';\n\nexport function SelectStatus() {\n  const theme = useTheme();\n  const {\n    state: {\n      StatusReducer: { status },\n    },\n    dispatch,\n  } = useContext(Context);\n\n  function handleChange({ target }: React.ChangeEvent<{ value: string }>) {\n    const status = target.value;\n    dispatch({\n      type: 'STATUS_CHANAGE',\n      status,\n    });\n    saveData('status', status);\n  }\n\n  useEffect(() => {\n    if (status) {\n      dispatch({\n        type: 'SET_TIMER',\n        status,\n      });\n    }\n  }, [status, dispatch]);\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      style={{\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n      }}\n    >\n      <FormLabel component=\"legend\">Status</FormLabel>\n      <RadioGroup\n        aria-label=\"status\"\n        name=\"status\"\n        value={status}\n        onChange={handleChange}\n      >\n        <FormControlLabel value=\"reading\" control={<Radio />} label=\"Reading\" />\n        <FormControlLabel\n          value=\"thinking\"\n          control={<Radio />}\n          label=\"Thinking\"\n        />\n        <FormControlLabel value=\"coding\" control={<Radio />} label=\"Coding\" />\n        <FormControlLabel\n          value=\"debugging\"\n          control={<Radio />}\n          label=\"Debugging\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import { loadData } from '../../common';\n\nexport const initialStatus = { status: loadData('status') || 0 };\n\nexport function StatusReducer(state = initialStatus, { type, status }: any) {\n  switch (type) {\n    case 'STATUS_CHANAGE':\n      return {\n        ...state,\n        status,\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineOppositeContent,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n  TimelineContent,\n} from '@material-ui/lab';\n\nimport { formatTime } from '../../common';\n\nconst statusKeys = ['Reading', 'Thinking', 'Coding', 'Debugging'];\n\nexport function Summary({ timers }: any) {\n  const sum = statusKeys.reduce(\n    (sum, status) => sum + timers[status.toLowerCase()],\n    0,\n  );\n  timers['total'] = sum;\n  return (\n    <Timeline align=\"alternate\">\n      {statusKeys.concat('Total').map((status) => (\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography\n              color=\"textSecondary\"\n              style={{\n                fontFamily: 'Reenie Beanie',\n                fontStyle: 'normal',\n                fontWeight: 500,\n                fontSize: 30.65,\n                textTransform: 'uppercase',\n                marginTop: -12,\n              }}\n            >\n              {formatTime(Math.round(timers[status.toLowerCase()] / 1000))}\n            </Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot />\n            {status !== 'Total' ? <TimelineConnector /> : <></>}\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography>{status}</Typography>\n          </TimelineContent>\n        </TimelineItem>\n      ))}\n    </Timeline>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nimport { Context } from '../../context';\nimport { saveData } from '../../common';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function CodeDialog() {\n  const {\n    state: {\n      CodeDialogReducer: { isOpen, reason },\n      SelectCodeReducer: { problemCodeList },\n    },\n    dispatch,\n  } = useContext(Context);\n  const [code, setCode] = useState('');\n  const [helperText, setHelperText] = useState('');\n\n  function handleChange({ target }: any) {\n    setCode(target.value);\n    setHelperText('');\n  }\n\n  function handleClose() {\n    dispatch({\n      type: 'SET_IS_OPEN',\n      isOpen: false,\n      reason: 'nothing',\n    });\n    setCode('');\n    setHelperText('');\n  }\n\n  function handleClick() {\n    let message, newProblemCodeList;\n    if (!code) {\n      message = 'please fill the field';\n    }\n\n    if (reason === 'add') {\n      if (problemCodeList.includes(code)) {\n        message = 'this code is already created';\n      }\n      newProblemCodeList = problemCodeList.concat(code);\n    } else if (reason === 'remove') {\n      newProblemCodeList = problemCodeList.filter(\n        (value: string) => value !== code,\n      );\n    }\n\n    if (message) {\n      setHelperText(message);\n    } else {\n      dispatch({\n        type: 'SET_PROBLEM_CODE',\n        problemCodeList: newProblemCodeList,\n      });\n      dispatch({\n        type: 'SET_IS_OPEN',\n        isOpen: false,\n        reason: 'nothing',\n      });\n      dispatch({\n        type: 'SELECT_CODE',\n        code: '',\n      });\n      saveData(code, {\n        timers: {\n          reading: 0,\n          thinking: 0,\n          coding: 0,\n          debugging: 0,\n        },\n      });\n      saveData('problemCodeList', newProblemCodeList);\n      saveData('code', '');\n\n      setHelperText('');\n      setCode('');\n    }\n  }\n\n  return (\n    <Dialog\n      open={isOpen}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">Code dialog</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={!!helperText}\n          placeholder=\"type problem code\"\n          value={code}\n          onChange={handleChange}\n          helperText={helperText}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClick} color=\"primary\">\n          Go\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export const initialCodeDialog = {\n  isOpen: false,\n};\n\nexport function CodeDialogReducer(\n  state = initialCodeDialog,\n  { type, isOpen, reason }: any,\n) {\n  switch (type) {\n    case 'SET_IS_OPEN':\n      return {\n        ...state,\n        isOpen,\n        reason,\n      };\n    default:\n      return state;\n  }\n}\n","import React, { useContext } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Context } from '../../context';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    speedDial: {\n      position: 'absolute',\n      bottom: theme.spacing(3),\n      right: theme.spacing(3),\n    },\n  }),\n);\n\nconst actions = [\n  { icon: <AddIcon />, name: 'Add code', type: 'add' },\n  { icon: <DeleteIcon />, name: 'Delete code', type: 'remove' },\n];\n\nexport function OpenIconSpeedDial() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  const { dispatch } = useContext(Context);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleClick(reason: string) {\n    return () => {\n      dispatch({\n        type: 'SET_IS_OPEN',\n        isOpen: true,\n        reason,\n      });\n      setOpen(false);\n    };\n  }\n\n  return (\n    <SpeedDial\n      ariaLabel=\"SpeedDial openIcon\"\n      className={classes.speedDial}\n      icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n    >\n      {actions.map((action) => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          onClick={handleClick(action.type)}\n        />\n      ))}\n    </SpeedDial>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  Snackbar,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  useTheme,\n} from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nimport { Context } from '../../context';\nimport { saveData } from '../../common';\nimport { SelectProblemCode } from '../select-code';\nimport { Timer } from '../timer';\nimport { SelectStatus } from '../status';\nimport { Summary } from '../summary';\nimport { CodeDialog } from '../code-dialog';\nimport { OpenIconSpeedDial } from '../speed-dial';\n\nfunction StepAction(props: any) {\n  const theme = useTheme();\n  const {\n    state: {\n      SelectCodeReducer: { code },\n      StatusReducer: { status },\n      StepperReducer: { activeStep },\n      TimerReducer: { isStarted },\n    },\n    dispatch,\n  } = useContext(Context);\n\n  const completedList = [!!code, !!status];\n\n  function handleNext() {\n    if (!completedList[activeStep] && activeStep !== 2) {\n      dispatch({\n        type: 'SET_ERROR_MESSAGE',\n        errorMessage:\n          'Please select a problem code so you can go to the next step',\n      });\n      return;\n    }\n\n    if (activeStep === 2 && isStarted) {\n      dispatch({\n        type: 'SET_ERROR_MESSAGE',\n        errorMessage: 'Stop the timer first before going to the next step',\n      });\n      return;\n    }\n\n    const step = Math.min(3, activeStep + 1);\n    dispatch({\n      type: 'HANDLE_NEXT',\n      activeStep: step,\n    });\n    saveData('activeStep', step);\n  }\n\n  function handleBack() {\n    if (activeStep === 2 && isStarted) {\n      dispatch({\n        type: 'SET_ERROR_MESSAGE',\n        errorMessage: 'Stop the timer first before going to the previous step',\n      });\n      return;\n    }\n    const step = Math.max(0, activeStep - 1);\n    dispatch({\n      type: 'HANDLE_BACK',\n      activeStep: step,\n    });\n    saveData('activeStep', step);\n  }\n\n  return (\n    <div {...props}>\n      <Button\n        style={{ marginRight: theme.spacing(2) }}\n        onClick={handleBack}\n        disabled={activeStep === 0}\n      >\n        Back\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleNext}\n        disabled={activeStep === 3}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function StepperComponent() {\n  const theme = useTheme();\n  const {\n    state: {\n      StepperReducer: { activeStep, errorMessage, open },\n      TimerReducer: { timers },\n    },\n    dispatch,\n  } = useContext(Context);\n\n  function handleClose() {\n    dispatch({\n      type: 'CLOSE_ERROR_MESSAGE',\n    });\n  }\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n      >\n        <Alert severity=\"info\" onClose={handleClose}>\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n      <Stepper\n        activeStep={activeStep}\n        orientation=\"vertical\"\n        style={{\n          width: 1000,\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        <Step key=\"1\">\n          <StepLabel>Select a problem code</StepLabel>\n          <StepContent>\n            <SelectProblemCode />\n            <StepAction\n              style={{\n                width: 250,\n                display: 'flex',\n                justifyContent: 'center',\n                marginLeft: -17,\n                marginTop: theme.spacing(2),\n              }}\n            />\n          </StepContent>\n        </Step>\n        <Step key=\"2\">\n          <StepLabel>Select status</StepLabel>\n          <StepContent>\n            <SelectStatus />\n            <StepAction\n              style={{\n                marginLeft: -5,\n                marginTop: theme.spacing(2),\n              }}\n            />\n          </StepContent>\n        </Step>\n        <Step key=\"3\">\n          <StepLabel>Start timing</StepLabel>\n          <StepContent>\n            <Timer />\n            <StepAction\n              style={{\n                marginLeft: -5,\n                marginTop: theme.spacing(2),\n              }}\n            />\n          </StepContent>\n        </Step>\n        <Step key=\"4\">\n          <StepLabel>Create a summary</StepLabel>\n          <StepContent>\n            <Summary timers={timers} />\n            <StepAction\n              style={{\n                marginLeft: -5,\n                marginTop: theme.spacing(2),\n              }}\n            />\n          </StepContent>\n        </Step>\n      </Stepper>\n      <CodeDialog />\n      <OpenIconSpeedDial />\n    </>\n  );\n}\n","import { loadData } from '../../common';\n\nexport const initialStepper = {\n  activeStep: loadData('activeStep') || 0,\n};\n\nexport function StepperReducer(\n  state = initialStepper,\n  { type, activeStep, errorMessage }: any,\n) {\n  switch (type) {\n    case 'HANDLE_NEXT':\n      return {\n        ...state,\n        activeStep,\n      };\n    case 'HANDLE_BACK':\n      return {\n        ...state,\n        activeStep,\n      };\n    case 'SET_ERROR_MESSAGE':\n      return {\n        ...state,\n        errorMessage,\n        open: true,\n      };\n    case 'CLOSE_ERROR_MESSAGE':\n      return {\n        ...state,\n        open: false,\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nimport { StepperComponent } from './stepper';\n\nexport function App() {\n  return (\n    <Container>\n      <StepperComponent />\n    </Container>\n  );\n}\n","import React, { createContext, useReducer } from 'react';\nimport { combineReducers } from '@reduxjs/toolkit';\n\nimport {\n  StepperReducer,\n  StatusReducer,\n  SelectCodeReducer,\n  TimerReducer,\n  CodeDialogReducer,\n  initialStepper,\n  initialSelectCode,\n  initialStatus,\n  initialTimer,\n  initialCodeDialog,\n} from './components';\n\nconst initialState = {\n  StepperReducer: initialStepper,\n  SelectCodeReducer: initialSelectCode,\n  StatusReducer: initialStatus,\n  TimerReducer: initialTimer,\n  CodeDialogReducer: initialCodeDialog,\n};\n\nexport const Context = createContext<any>(initialState);\n\nconst reducer: any = combineReducers({\n  StepperReducer,\n  SelectCodeReducer,\n  StatusReducer,\n  TimerReducer,\n  CodeDialogReducer,\n});\n\nexport function ContextProvider({ children }: any) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { ContextProvider } from './context';\nimport { App } from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}