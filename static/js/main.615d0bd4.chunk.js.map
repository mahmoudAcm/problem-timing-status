{"version":3,"sources":["components/timer/timer.module.ts","common/hooks/use-local-storage.ts","common/utils/time.ts","components/state.context.tsx","components/timer/summary.component.tsx","components/code/code.module.ts","components/code/create-and-delete-code.component.tsx","components/code/select-code.component.tsx","components/code/code.component.tsx","components/timer/status-menu.component.tsx","components/timer/timer-controller.component.tsx","common/hooks/use-state.ts","components/timer/timer.component.tsx","index.tsx"],"names":["useStyles","makeStyles","timer","position","left","top","transform","center","display","flexDirection","alignItems","status_select","width","margin","timerBtn","marginTop","loadData","key","JSON","parse","localStorage","getItem","saveData","storage","setItem","stringify","formatTime","time","hh","Math","floor","mm","ss","StateContext","createContext","StateProvider","children","useState","status","setStatus","code","setCode","problemCodeList","setProblemCodeList","isOpen","setIsOpen","Provider","value","Alert","props","elevation","variant","Summary","context","useContext","useMemo","keys","timers","totalTime","reduce","total","Snackbar","anchorOrigin","vertical","horizontal","open","severity","onClose","map","round","justifyContent","selectCode","marginBottom","codeRegx","CreateAndDeleteCode","helperText","setHelperText","newCode","setNewCode","validateCode","match","Grid","container","direction","spacing","item","TextField","required","label","placeholder","onChange","target","message","color","InputLabelProps","shrink","justify","Button","onClick","list","includes","newArray","concat","reading","thinking","coding","debugging","filter","removeItem","SelectCode","classes","Autocomplete","className","id","options","getOptionLabel","option","renderInput","params","Code","StatusMenu","FormControl","InputLabel","Select","labelId","MenuItem","TimerController","setTimerInterval","isStarted","setIsStarted","curTime","setCurTime","intialState","state","setState","useEffect","useMyState","setTotalTime","setTime","useCallback","startedAt","Date","now","interval","setInterval","Typography","isStartedCopy","clearInterval","Timer","Card","CardHeader","title","subheader","action","IconButton","aria-label","setTimeout","CardContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.615d0bd4.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  timer: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  status_select: {\n    width: 110,\n    margin: '20px auto',\n  },\n  timerBtn: {\n    width: 150,\n    marginTop: 20,\n  },\n});\n","import { useEffect } from 'react';\n\nexport function loadData(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function saveData<T = any>(key: string, storage: T) {\n  localStorage.setItem(key, JSON.stringify(storage));\n}\n\nexport function useLocalStorage(\n  key: string,\n  updateStorage: (storage: any) => any,\n) {\n  useEffect(() => {\n    const newData = updateStorage(loadData(key));\n    saveData(key, newData);\n  }, [key, updateStorage]);\n}\n","/**\n * retunrs the current time in seconds\n */\nexport function getTime() {\n  return Math.round(Date.now() / 1000);\n}\n\n/**\n * returns the time in format of `hh:mm:ss`\n * @param { number } time time in seconds\n */\nexport function formatTime(time: number) {\n  let hh: any = Math.floor(time / 60 ** 2);\n  if (hh < 10) hh = '0' + hh;\n\n  let mm: any = Math.floor((time % 60 ** 2) / 60);\n  if (mm < 10) mm = '0' + mm;\n\n  let ss: any = Math.floor((time % 60 ** 2) % 60);\n  if (ss < 10) ss = '0' + ss;\n\n  return `${hh}:${mm}:${ss}`;\n}\n","import React, { createContext, useState } from 'react';\nimport { loadData, saveData } from '../common';\n\nexport const StateContext = createContext<any>({});\n\nexport function StateProvider({ children }: any) {\n  const [status, setStatus] = useState(\n    ((status: string) => {\n      if (!status) {\n        saveData('status', 'reading');\n        return 'reading';\n      }\n      return status;\n    })(loadData('status')),\n  );\n\n  const [code, setCode] = useState<string>(loadData('code'));\n  const [problemCodeList, setProblemCodeList] = useState(\n    loadData('problemCodeList') || [],\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <StateContext.Provider\n      value={{\n        status,\n        setStatus,\n        problemCodeList,\n        setProblemCodeList,\n        code,\n        setCode,\n        isOpen,\n        setIsOpen,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  );\n}\n","import React, { useContext, useMemo } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { StateContext } from '../state.context';\nimport { formatTime, loadData } from '../../common';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function Summary() {\n  const context = useContext(StateContext);\n  const { keys, timers, totalTime } = useMemo(() => {\n    const keys = ['reading', 'thinking', 'coding', 'debugging'];\n\n    if (!context.code || !context.isOpen)\n      return { keys, timers: {}, totalTime: 0 };\n\n    const { timers } = loadData(context.code);\n    const totalTime = keys.reduce((total, status) => total + timers[status], 0);\n    return {\n      keys,\n      timers,\n      totalTime,\n    };\n  }, [context.code, context.isOpen]);\n\n  function handleClose() {\n    context.setIsOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      open={context.isOpen && !!context.code}\n    >\n      <Alert severity=\"info\" onClose={handleClose}>\n        {keys.map((status) => (\n          <div key={status}>\n            {status}: {formatTime(Math.round((timers[status] || 0) / 1000))}\n          </div>\n        ))}\n        <div>total time: {formatTime(Math.round(totalTime / 1000))}</div>\n      </Alert>\n    </Snackbar>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectCode: {\n    width: 280,\n    marginTop: 30,\n    marginBottom: 10,\n  },\n});\n","import React, { useContext, useState } from 'react';\nimport { Button, TextField, Grid } from '@material-ui/core';\n\nimport { StateContext } from '../state.context';\nimport { saveData } from '../../common';\n\nconst codeRegx = /^CF[1-9]\\d*-D[1-4]-[A-E]$/;\n\nexport function CreateAndDeleteCode() {\n  const context = useContext(StateContext);\n  const [helperText, setHelperText] = useState('');\n  const [newCode, setNewCode] = useState('');\n\n  function validateCode(code: string) {\n    if (!code.match(codeRegx)) {\n      return 'please provide a valid code';\n    } else {\n      return '';\n    }\n  }\n\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\n    const code = target.value as string;\n    setNewCode(code);\n\n    if (!code) {\n      setHelperText('');\n      return;\n    }\n\n    const message = validateCode(code);\n    setHelperText(message);\n  }\n\n  function handleClick() {\n    if (!newCode) {\n      setHelperText('please fill field');\n      return;\n    }\n\n    const message = validateCode(newCode);\n    setHelperText(message);\n\n    if (message) return;\n\n    context.setProblemCodeList((list: Array<string>) => {\n      if (list.includes(newCode)) {\n        setHelperText('this code is already created');\n        return list;\n      }\n      const newArray = list.concat(newCode);\n      saveData('problemCodeList', newArray);\n      saveData(newCode, {\n        timers: {\n          reading: 0,\n          thinking: 0,\n          coding: 0,\n          debugging: 0,\n        },\n      });\n      setNewCode('');\n      return newArray;\n    });\n  }\n\n  function handleRemove() {\n    const message = validateCode(newCode);\n    setHelperText(message);\n\n    if (message) return;\n\n    context.setProblemCodeList((list: Array<string>) => {\n      if (!list.includes(newCode)) {\n        setHelperText('this code is not found');\n        return list;\n      }\n      const newArray = list.filter((value) => value !== newCode);\n      saveData('problemCodeList', newArray);\n      saveData('code', null);\n      localStorage.removeItem(newCode);\n      context.setCode('');\n      setNewCode('');\n      return newArray;\n    });\n  }\n\n  return (\n    <Grid container alignItems=\"center\" direction=\"column\" spacing={3}>\n      <Grid item>\n        <TextField\n          required\n          label=\"Create And Delete Code\"\n          placeholder=\"code i.e CF101-D2-A\"\n          value={newCode}\n          onChange={handleChange}\n          helperText={helperText}\n          variant=\"outlined\"\n          color=\"secondary\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </Grid>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n            create\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleRemove}>\n            remove\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nimport { useStyles } from './code.module';\nimport { StateContext } from '../state.context';\nimport { saveData } from '../../common';\n\nexport function SelectCode() {\n  const context = useContext(StateContext);\n  const classes = useStyles();\n\n  function handleChange(...data: any) {\n    const code = data[1];\n    saveData('code', code);\n    context.setCode(code);\n    context.setIsOpen(false);\n  }\n  return (\n    <Autocomplete\n      className={classes.selectCode}\n      id=\"code\"\n      options={context.problemCodeList as Array<string>}\n      getOptionLabel={(option) => option}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Code\" variant=\"outlined\" />\n      )}\n      onChange={handleChange}\n      value={context.code}\n    />\n  );\n}\n","import React from 'react';\n\nimport { useStyles } from './code.module';\nimport { CreateAndDeleteCode } from './create-and-delete-code.component';\nimport { SelectCode } from './select-code.component';\n\nexport function Code() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.center}>\n      <CreateAndDeleteCode />\n      <SelectCode />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\n\nimport { useStyles } from './timer.module';\nimport { StateContext } from '../';\nimport { saveData } from '../../common';\n\nexport function StatusMenu() {\n  const classes = useStyles();\n\n  const context = useContext(StateContext);\n\n  function handleChange({ target }: React.ChangeEvent<{ value: unknown }>) {\n    const status = target.value as string;\n    context.setStatus(status);\n    saveData('status', status);\n  }\n\n  return (\n    <FormControl>\n      <InputLabel id=\"status\">Status</InputLabel>\n      <Select\n        labelId=\"status\"\n        id=\"status-select\"\n        value={context.status}\n        onChange={handleChange}\n        className={classes.status_select}\n      >\n        <MenuItem value=\"reading\">reading</MenuItem>\n        <MenuItem value=\"thinking\">thinking</MenuItem>\n        <MenuItem value=\"coding\">coding</MenuItem>\n        <MenuItem value=\"debugging\">debugging</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n","import React, {\n  useContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Button, Typography } from '@material-ui/core';\n\nimport { useStyles } from './timer.module';\nimport { loadData, saveData, formatTime, useMyState } from '../../common';\nimport { StateContext } from '../state.context';\n\nexport function TimerController() {\n  const context = useContext(StateContext);\n  const storage = useMemo(() => loadData(context.code), [context.code]);\n  const [, setTimerInterval] = useState<any>(null);\n  const [isStarted, setIsStarted] = useState<boolean>(loadData('isStarted'));\n  const [curTime, setCurTime] = useState(0);\n  const [totalTime, setTotalTime] = useMyState<number>(\n    storage.timers[context.status],\n  );\n\n  const classes = useStyles();\n\n  const setTime = useCallback(function (startedAt: number) {\n    return () => {\n      const curTime = Date.now() - startedAt;\n      setCurTime(curTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isStarted) {\n      setTimerInterval((interval: any) => {\n        if (interval === null) {\n          return setInterval(setTime(loadData('startedAt')), 1000);\n        }\n        return interval;\n      });\n    }\n  }, [isStarted, setTimerInterval, setTime]);\n\n  function handleClick() {\n    setIsStarted((isStarted) => {\n      const isStartedCopy = !isStarted;\n      saveData('isStarted', isStartedCopy);\n\n      if (isStarted) {\n        setTimerInterval((interval: any) => {\n          clearInterval(interval);\n          return interval;\n        });\n        setCurTime((curTime) => {\n          const time = curTime + totalTime;\n          storage.timers[context.status] = time;\n          saveData(context.code, storage);\n          saveData('startedAt', 0);\n          setTotalTime(time);\n          return 0;\n        });\n      } else {\n        const startedAt = Date.now();\n        saveData('startedAt', startedAt);\n        setTimerInterval(setInterval(setTime(startedAt), 1000));\n      }\n\n      return isStartedCopy;\n    });\n  }\n\n  return (\n    <div className={classes.center}>\n      <Typography variant=\"h1\">\n        {formatTime(Math.round((curTime + totalTime) / 1000))}\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.timerBtn}\n        onClick={handleClick}\n      >\n        {isStarted ? 'stop' : 'start'}\n      </Button>\n    </div>\n  );\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nexport function useMyState<T = any>(\n  intialState: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [state, setState] = useState<T>(intialState);\n  useEffect(() => {\n    setState(intialState);\n  }, [intialState]);\n\n  return [state, setState];\n}\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport SpeakerNotesOutlinedIcon from '@material-ui/icons/SpeakerNotesOutlined';\n\nimport { useStyles } from './timer.module';\nimport { Summary } from './summary.component';\nimport { Code } from '../code/code.component';\nimport { StatusMenu } from './status-menu.component';\nimport { TimerController } from './timer-controller.component';\nimport { StateContext } from '../';\n\nexport function Timer() {\n  const context = useContext(StateContext);\n  const classes = useStyles();\n\n  function handleSummaryClick() {\n    context.setIsOpen(false);\n    setTimeout(() => {\n      context.setIsOpen(true);\n    }, 200);\n  }\n\n  return (\n    <>\n      <Summary />\n      <Card className={classes.timer} elevation={5}>\n        <CardHeader\n          title=\"Problem Status\"\n          subheader=\"Timer\"\n          action={\n            <IconButton\n              aria-label=\"summary\"\n              color=\"primary\"\n              title=\"get a summary\"\n              onClick={handleSummaryClick}\n            >\n              <SpeakerNotesOutlinedIcon />\n            </IconButton>\n          }\n        />\n        <CardContent>\n          <div className={classes.center}>\n            <Code />\n            <StatusMenu />\n            {context.code ? (\n              <TimerController />\n            ) : (\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Please Select Code\n              </Typography>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { StateProvider, Timer } from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <Timer />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}